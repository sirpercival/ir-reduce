#:import path os.path
#:import np numpy

<IRScreen>:
    ScrollView:
        do_scroll_x: False
        do_scroll_y: False if root.fullscreen else (content.height > root.height - dp(16))
        AnchorLayout:
            size_hint_y: None
            height: root.height if root.fullscreen else max(root.height, content.height)
            GridLayout:
                id: content
                cols: 2
                spacing: '8dp'
                padding: '8dp'
                size_hint: (1, 1) if root.fullscreen else (.9, None)
                height: self.height if root.fullscreen else root.height

<SpecscrollInsert>:
    orientation: 'horizontal'
    size_hint: 1, None
    height: '30dp'
    Label:
        text: root.text
    CheckBox:
        size_hint: None, None
        height: '30dp'
        width: '30dp'
        active: root.active
        on_active: root.active = self.active

<CombineScreen>:
    name: 'combine'
    id: combine
    theapp: app
    paths: app.current_paths
    BoxLayout:
        orientation: 'vertical'
        Graph:
            id: multispec
            size_hint_y: 0.35
            xlabel: 'Wavelength'
            ylabel: 'Counts'
            x_ticks_minor: 5
            x_ticks_major: int((root.wmax-root.wmin)/5.)
            y_ticks_minor: 5
            y_ticks_major: int((root.dmax - root.dmin) / 5.)
            x_grid_label: True
            y_grid_label: True
            xlog: False
            ylog: False
            x_grid: False
            y_grid: False
            xmin: root.wmin
            xmax: root.wmax
            ymin: root.dmin
            ymax: root.dmax
            label_options: {'bold': True}
        Graph:
            id: combspec
            size_hint_y: 0.35
            xlabel: 'Wavelength'
            ylabel: 'Counts'
            x_ticks_minor: 5
            x_ticks_major: int((root.wmax-root.wmin)/5.)
            y_ticks_minor: 5
            y_ticks_major: int((root.dmax - root.dmin) / 5.)
            x_grid_label: True
            y_grid_label: True
            xlog: False
            ylog: False
            x_grid: False
            y_grid: False
            xmin: root.wmin
            xmax: root.wmax
            ymin: root.dmin
            ymax: root.dmax
            label_options: {'bold': True}
        BoxLayout:
            size_hint_y: 0.3
            orientation: 'horizontal'
            BorderBox:
                ScrollView:
                    BoxLayout:
                        id: specscroll
                        orientation: 'vertical'
            BoxLayout:
                orientation: 'vertical'
                Spinner:
                    text: 'Choose a fiducial for scaling'
                    values: root.speclist
                    on_text: root.set_scale(self.text)
                BoxLayout:
                    orientation: 'horizontal'
                    ToggleButton:
                        id: median
                        text: 'Median'
                        group: 'medmean'
                        state: 'down'
                        on_state: if state == 'down': root.comb_method = 'median'
                    ToggleButton:
                        text: 'Weighted Mean'
                        group: 'medmean'
                        state: 'normal'
                        on_state: if state == 'down': root.comb_method = 'mean'
                BoxLayout:
                    orientation: 'horizontal'
                    TextInput:
                        id: savefile
                        size_hint_x: 0.7
                        text: app.current_target.targid+'.fits'
                        write_tab: False
                    Button:
                        size_hint_x: 0.3
                        text: 'Save'
                        on_press: root.combine()

<ExtractRegionScreen>:
    name: 'region'
    imcanvas: ipane.ids.the_image
    theapp: app
    paths: app.current_paths
    extract_pairs: app.extract_pairs
    current_target: app.current_target
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.4
        Spinner:
            id: impair
            text: 'Choose an image pair:'
            values: root.pairstrings
            on_text: root.set_imagepair(self.text)
            size_hint_y: None
            height: '30dp'
        BorderBox:
            BoxLayout:
                orientation: 'vertical'
                Widget:
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint_y: None
                    height: '30dp'
                    Label:
                        text: 'X1:'
                        size_hint_x: 0.4
                    TextInput:
                        id: x1t
                        text: str(root.bx1)
                        multiline: False
                        on_focus: if not self.focus: root.set_coord('x1', self.text)
                        write_tab: False
                Slider:
                    id: x1s
                    min: 0
                    max: root.imwid
                    step: 1
                    value: root.bx1
                    size_hint_y: None
                    height: '30dp'
                    on_value: root.set_coord('x1', self.value)
                Widget:
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint_y: None
                    height: '30dp'
                    Label:
                        text: 'Y1:'
                        size_hint_x: 0.4
                    TextInput:
                        id: y1t
                        text: str(root.by1)
                        multiline: False
                        on_focus: if not self.focus: root.set_coord('y1', self.text)
                        write_tab: False
                Slider:
                    id: y1s
                    min: 0
                    max: root.imwid
                    step: 1
                    value: root.by1
                    size_hint_y: None
                    height: '30dp'
                    on_value: root.set_coord('y1', self.value)
                Widget:
        BorderBox:
            BoxLayout:
                orientation: 'vertical'
                Widget:
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint_y: None
                    height: '30dp'
                    Label:
                        text: 'X2:'
                        size_hint_x: 0.4
                    TextInput:
                        id: x2t
                        text: str(root.bx2)
                        multiline: False
                        on_focus: if not self.focus: root.set_coord('x2', self.text)
                        write_tab: False
                Slider:
                    id: x2s
                    min: 0
                    max: root.imwid
                    step: 1
                    value: root.bx2
                    size_hint_y: None
                    height: '30dp'
                    on_value: root.set_coord('x2', self.value)
                Widget:
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint_y: None
                    height: '30dp'
                    Label:
                        text: 'Y2:'
                        size_hint: 0.4, 1
                    TextInput:
                        id: y2t
                        text: str(root.by2)
                        multiline: False
                        on_focus: if not self.focus: root.set_coord('y2', self.text)
                        write_tab: False
                Slider:
                    id: y2s
                    min: 0
                    max: root.imwid
                    step: 1
                    value: root.by2
                    size_hint_y: None
                    height: '30dp'
                    on_value: root.set_coord('y2', self.value)
                Widget:
        Button:
            text: 'Select Extraction Region'
            size_hint_y: None
            height: '30dp'
            on_press: root.save_region()
    ImagePane:
        id: ipane
        size_hint_x: 0.6

<InstrumentScreen>:
    name: 'instrument'
    BoxLayout:
        orientation: 'vertical'
        spacing: '10dp'
        ComboEdit:
            id: iprof
            multiline: False
            hint_text: 'Instrument Profile ID'
            size_hint: 0.8, 0.15
            options: root.instrument_list
            on_focus: if not self.focus: root.set_instrument()
        BorderBox:
            size_hint: 0.8, 0.35
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Trace Direction:'
                    halign: 'left'
                ToggleButton:
                    id: trace_h
                    text: 'Horizontal'
                    group: 'tracedir'
                    state: 'down'
                ToggleButton:
                    id: trace_v
                    text: 'Vertical'
                    group: 'tracedir'
                    state: 'normal'
        BorderBox:
            size_hint: 0.8, 0.25
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Detector Dimensions:'
                    halign: 'left'
                BoxLayout:
                    orientation: 'horizontal'
                    Label:
                        text: 'X:'
                    TextInput:
                        id: xdim
                        multiline: False
                        text: '1024'
                        write_tab: False
                    Label:
                        text: 'Y'
                    TextInput:
                        id: ydim
                        multiline: False
                        text: '1024'
                        write_tab: False
        BorderBox:
            size_hint: 0.8, 0.6
            TextInput:
                id: idesc
                hint_text: 'Instrument Profile Description'
                write_tab: False
        Widget:
            size_hint_y: 0.5
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: '~Fits Header Keywords~'
            font_size: 14
            size_hint: 0.8, 0.1
            halign: 'center'
        Label:
            text: 'Exposure Time:'
            size_hint: 0.8, 0.1
        TextInput:
            id: etime
            text: root.current_instrument.headerkeys['exp']
            multiline: False
            size_hint: 1, 0.1
            write_tab: False
        Label:
            text: 'Airmass:'
            size_hint: 0.8, 0.1
        TextInput:
            id: secz
            text: root.current_instrument.headerkeys['air']
            multiline: False
            size_hint: 1, 0.1
            write_tab: False
        Label:
            text: 'Image Type:'
            size_hint: 0.8, 0.1
        TextInput:
            id: itype
            text: root.current_instrument.headerkeys['type']
            multiline: False
            size_hint: 1, 0.1
            write_tab: False
        Widget:
        Button:
            text: 'Save Instrument Profile'
            size_hint: 0.8, 0.1
            on_press: root.save_instrument()

<ObsfileInsert>:
    orientation: 'horizontal'
    size_hint: 1, 0.3
    Label:
        #text: path.basename(root.obsfile.fitsfile)
        text: path.basename(root.obsfile)
    Spinner:
        id: spnr
        text: root.dithertype
        values: ['A', 'B', 'X']
        on_text: root.dithertype = self.text
        size_hint_x: 0.1
    Button:
        text: 'Header'
        on_press: root.launch_header()
        size_hint_x: 0.4

<ObservingScreen>:
    name: 'observing'
    obsrun_list: self.obsids.keys()
    theapp: app
    BoxLayout:
        orientation: 'vertical'
        ComboEdit:
            id: obsrun
            multiline: False
            hint_text: 'Observing Run ID'
            size_hint: 0.8, 0.125
            options: root.obsrun_buttons
            on_focus: if not self.focus: root.set_obsrun()
        ComboEdit:
            id: obsnight
            multiline: False
            hint_text: 'Observation Date'
            size_hint: 0.8, 0.125
            options: root.obsnight_buttons
            on_focus: if not self.focus: root.set_obsnight()
        BoxLayout:
            size_hint: 1, 0.125
            TextInput:
                id: rawpath
                hint_text: 'Path to Raw Images'
                size_hint_x: 0.6
                multiline: False
                on_focus: if not self.focus: root.setpath('raw',self.text)
                write_tab: False
            Button:
                text: 'Choose'
                size_hint_x: 0.4
                on_press: root.pick_rawpath()
        BoxLayout:
            size_hint: 1, 0.125
            TextInput:
                id: outpath
                hint_text: 'Path to Output'
                size_hint_x: 0.6
                multiline: False
                on_focus: if not self.focus: root.setpath('out',self.text)
                write_tab: False
            Button:
                text: 'Choose'
                size_hint_x: 0.4
                on_press: root.pick_outpath()
        BoxLayout:
            size_hint: 1, 0.125
            TextInput:
                id: calpath
                hint_text: 'Path to Calibration Images'
                size_hint_x: 0.6
                multiline: False
                on_focus: if not self.focus: root.setpath('cal',self.text)
                write_tab: False
            Button:
                text: 'Choose'
                size_hint_x: 0.4
                on_press: root.pick_calpath()
        Label:
            size_hint: 0.8, 0.125
            text: 'File format:'
            halign: 'left'
        TextInput:
            id: fformat
            text: 'obs.####'
            size_hint: 1, 0.125
            multiline: False
            on_focus: if not self.focus: root.check_filestub(self.text)
            write_tab: False
        Spinner:
            id: caltypes
            size_hint: 0.8, 0.125
            text: 'Calibration Images'
            values: ['Flats (lamps ON)', 'Flats (lamps OFF)', 'Arc Lamps']
            on_text: root.set_caltype(self.text)
        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, 0.125
            TextInput:
                id: calfiles
                text: '1-10'
                multiline: False
                size_hint_x: 0.5
                on_focus: if not self.focus: root.set_calfile(self.text)
                write_tab: False
            Label:
                id: calout
                text: 'File not yet created'
        BoxLayout:
            size_hint: 1, 0.125
            Button:
                text: 'Make Cals'
                on_press: root.make_cals()
            Button:
                text: 'Save'
                on_press: root.save_night()
        Widget:
    BoxLayout:
        orientation: 'vertical'
        Spinner:
            id: targs
            size_hint: 1, 0.1
            text: 'Targets'
            values: root.target_list
            on_text: root.set_target()
        Button:
            size_hint: 1, 0.1
            text: 'Add target'
            on_press: root.add_target()
        BorderBox:
            size_hint: 1., 0.4
            ScrollView:
                do_scroll_x: False
                effect_cls: Factory.DampedScrollEffect
                BoxLayout:
                    orientation: 'vertical'
                    id: obsfiles
        TextInput:
            id: tnotes
            multiline: True
            size_hint: 1, 0.4
            text: root.current_target.notes
            write_tab: False
        Button:
            size_hint: 1, 0.1
            text: 'Save Target'
            on_press: root.save_target()

<TelluricScreen>:
    name: 'telluric'
    id: tellscreen
    BoxLayout:
        orientation: 'vertical'
        Image:
            size_hint: None, None
            size: self.texture_size
            source: 'resources/stopsign.png'
        Label:
            valign: 'middle'
            halign: 'center'
            text: 'This area is under construction'

<ApertureSlider>:
    slider: sl
    trash: bu
    plot_points: root.tfscreen.tplot.points
    Slider:
        id: sl
        on_value: root.fix_line(self.value)
    AnchorLayout:
        size_hint: 0.25, 1
        Button:
            id: bu
            background_normal: 'atlas://resources/buttons/gc-normal'
            background_down: 'atlas://resources/buttons/gc-pressed'
            size_hint: None, None
            size: 24, 24

<TracefitScreen>:
    name: 'trace'
    id: tfscreen
    paths: app.current_paths
    current_target: app.current_target
    current_flats: app.current_flats
    theapp: app
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.4
        Spinner:
            text: 'Choose an image pair:'
            values: root.pairstrings
            on_text: root.set_imagepair(self.text)
            size_hint: 1, 0.15
        #BoxLayout:
        #    orientation: 'horizontal'
        #    size_hint_y: 0.15
        #    Label:
        #        text: 'Stripe'
        #        size_hint_x: 0.25
        #    Slider:
        #        id: slmid
        #        on_value: root.set_trmid(self.value)
        #        min: 0.
        #        max: 1.
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.15
            Label:
                text: 'Positive Apertures:'
            Button:
                background_normal: 'atlas://resources/buttons/an-normal'
                background_down: 'atlas://resources/buttons/an-pressed'
                size_hint: None, None
                size: 24, 24
                on_press: root.add_postrace()
        BorderBox:
            size_hint_y: 0.35
            ScrollView:
                do_scroll_x: False
                effect_cls: Factory.DampedScrollEffect
                GridLayout:
                    cols: 1
                    id: postrace
                    spacing: [0,3]
                    row_default_height: 24
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.15
            Label:
                text: 'Negative Apertures:'
            Button:
                background_normal: 'atlas://resources/buttons/an-normal'
                background_down: 'atlas://resources/buttons/an-pressed'
                size_hint: None, None
                size: 24, 24
                on_press: root.add_negtrace()
        BorderBox:
            size_hint_y: 0.35
            ScrollView:
                do_scroll_x: False
                effect_cls: Factory.DampedScrollEffect
                GridLayout:
                    cols: 1
                    id: negtrace
                    spacing: [0,3]
                    row_default_height: 24
        GridLayout:
            size_hint_y: 0.3
            cols: 2
            Button:
                text: 'Set Fit (1)'
                on_press: root.set_psf()
            Button:
                text: 'Fit Trace (2, 4)'
                on_press: root.fit_trace()
            Button:
                text: 'Fix Distortion (3)'
                on_press: root.fix_distort()
            Button:
                text: 'Extract Spectrum (5)'
                on_press: root.extract_spectrum()
        Widget:
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.6
        Graph:
            id: the_graph
            xlabel: 'Pixel'
            ylabel: 'Mean Counts'
            x_ticks_minor: 5
            x_ticks_major: 10
            y_ticks_minor: 5
            y_ticks_major: int((root.drange[1] - root.drange[0]) / 5.)
            x_grid_label: True
            y_grid_label: True
            xlog: False
            ylog: False
            x_grid: False
            y_grid: False
            xmin: 0
            xmax: len(root.tplot.points)
            ymin: root.drange[0]
            ymax: root.drange[1]
            label_options: {'bold': True}
        StencilView:
            id: diffpane
            size_hint_y: 0.7
            canvas.before:
                Rectangle:
                    size: self.size
                    pos: self.pos
                    texture: root.iregion
                    tex_coords: root.rtx

<WavecalScreen>:
    name: 'wavecal'
    id: wvscreen
    paths: app.current_paths
    theapp: app
    BoxLayout:
        orientation: 'vertical'
        Graph:
            id: specdisplay
            xlabel: 'Pixel'
            ylabel: 'Spectrum Counts'
            #xmin: 0 if root.current_spectrum is None else float(np.round(root.current_spectrum.wav.min(), decimals=1))
            #xmax: 1023 if root.current_spectrum is None else float(np.round(root.current_spectrum.wav.max(), decimals=1))
            #ymin: 0 if root.current_spectrum is None else float(root.current_spectrum.spec.min())
            #ymax: 1 if root.current_spectrum is None else float(root.current_spectrum.spec.max())
            x_ticks_minor: 5
            x_ticks_major: (self.xmax - self.xmin)/5.
            y_ticks_minor: 5
            y_ticks_major: (self.ymax - self.ymin)/5.
            x_grid_label: True
            y_grid_label: True
            label_options: {'bold': True}
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.3
            BoxLayout:
                orientation: 'vertical'
                Spinner:
                    id: specspin
                    text: 'Choose a spectrum'
                    values: root.speclist
                    on_text: root.set_spectrum(self.text)
                    size_hint_y: None
                    height: '30dp'
                ComboEdit:
                    size_hint_y: None
                    height: '30dp'
                    id: linelist
                    multiline: False
                    hint_text: 'Reference line list'
                    options: root.linelist_buttons
                    on_focus: if not self.focus: root.set_linelist(self.text)
                BoxLayout:
                    orientation: 'horizontal'
                    BorderBox:
                        BoxLayout:
                            orientation: 'vertical'
                            ToggleButton:
                                id: lampcal_toggle
                                text: 'Use lamp calibrations'
                                group: 'caltype'
                                state: 'down'
                                allow_no_selection: False
                            ToggleButton:
                                id: skycal_toggle
                                text: 'Use sky lines'
                                group: 'caltype'
                                state: 'normal'
                                allow_no_selection: False
                    GridLayout:
                        cols: 2
                        row_force_default: True
                        row_default_height: '30dp'
                        Label:
                            text: 'Approx. min'
                        TextInput:
                            text: '0.0'
                            id: wmin
                            multiline: False
                            print_tab: False
                        Label:
                            text: 'Approx. max'
                        TextInput:
                            text: '1.0'
                            id: wmax
                            multiline: False
                            print_tab: False
            BoxLayout:
                orientation: 'vertical'
                size_hint_x: 0.4
                Button:
                    text: 'Assign Lines'
                    on_press: root.assign()
                Button:
                    text: 'Calibrate'
                    on_press: root.wavecal()
                Button:
                    text: 'Save Spectrum'
                    on_press: root.save_spectrum()
                Widget:

